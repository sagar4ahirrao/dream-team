# yaml-language-server: $schema=https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json

name: dreamteam
metadata:
    template: azd-init@1.10.3
workflows:
  up: 
    steps:
      - azd: provision
      - azd: deploy --all
services:
    backend:
        project: backend
        host: containerapp
        language: python
        docker:
            path: Dockerfile
        hooks:
          postdeploy: 
            windows:
                shell: pwsh
                run: 'azd env get-values > .env'
            posix:
                shell: sh
                run: 'azd env get-values > .env'
    mcpserver:
        project: mcp
        host: containerapp
        language: python
        docker:
            path: Dockerfile
        hooks:
          postdeploy: 
            windows:
                shell: pwsh
                run: 'azd env get-values > .env'
            posix:
                shell: sh
                run: 'azd env get-values > .env'
    frontend:
        project: frontend
        host: staticwebapp
        language: ts
        hooks:
            # Creates a temporary `.env.local` file for the build command. Vite will automatically use it during build.
            # The expected/required values are mapped to the infrastructure outputs.
            # .env.local is ignored by git, so it will not be committed if, for any reason, if deployment fails.
            # see: https://vitejs.dev/guide/env-and-mode
            # Note: Notice that dotenv must be a project dependency for this to work. See package.json.
            prebuild:
                windows:
                    shell: pwsh
                    run: 'npm install -D @types/react @types/react-dom @types/node typescript @vitejs/plugin-react vite; echo "VITE_BASE_URL=""$env:SERVICE_BACKEND_URI""" > .env ; echo "VITE_ALLWAYS_LOGGED_IN="true"" >> .env'
                posix:
                    shell: sh
                    run: 'npm install -D @types/react @types/react-dom @types/node typescript @vitejs/plugin-react vite && echo VITE_BASE_URL=\"$SERVICE_BACKEND_URI\" > .env && echo VITE_ALLWAYS_LOGGED_IN=\"true\" >> .env'     
            postdeploy:
                windows:
                    shell: pwsh
                    run: 'rm .env'
                posix:
                    shell: sh
                    run: 'rm .env'